{"pageProps":{"post":{"attributes":{},"html":"<h1 id=\"layout-flexbox\">Layout (flexbox)</h1>\n<h2 id=\"what-is-flexbox\">What is Flexbox?</h2>\n<p>Flexbox makes it easy to create flexible and responsive layouts. It works on a parent-child basis, aligning child\nelements within a parent container.</p>\n<h2 id=\"the-flexbox-model\">The Flexbox Model</h2>\n<p>Flexbox works with two main components:</p>\n<ol>\n<li><strong>Flex Container:</strong> The parent element that holds the flex items. Itâ€™s the element on which you apply display: flex;.</li>\n<li><strong>Flex Items:</strong> The child elements within the flex container. These items are automatically aligned according to the\nrules defined by Flexbox.</li>\n</ol>\n<p>Example:\n<strong>HTML:</strong></p>\n<pre><code class=\"language-html\">\n&lt;div class=&quot;container&quot;&gt;\n  &lt;div class=&quot;item&quot;&gt;Item 1&lt;/div&gt;\n  &lt;div class=&quot;item&quot;&gt;Item 2&lt;/div&gt;\n  &lt;div class=&quot;item&quot;&gt;Item 3&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n<p><strong>CSS:</strong></p>\n<pre><code class=\"language-css\">.container {\n    display: flex; /* Turns the container into a flex container */\n    background-color: #f4f4f4;\n    align-items: center; /* Centers the elements vertically  */\n    justify-content: center; /* Centers the elements horizontally  */\n    height: 100vh;\n}\n\n.item {\n    background-color: #333;\n    color: white;\n    padding: 20px;\n    margin: 10px;\n}\n</code></pre>\n<h2 id=\"key-flexbox-properties\">Key Flexbox Properties</h2>\n<p>Letâ€™s break down some of the most important Flexbox properties you&#39;ll use to create layouts.</p>\n<h3 id=\"1-display-flex\"><strong>1. display: flex</strong></h3>\n<p>This property is applied to the container to enable Flexbox. It turns the container into a flex container and its\nchildren into flex items.</p>\n<p>Example:</p>\n<pre><code class=\"language-css\">.container {\n    display: flex;\n}\n</code></pre>\n<h3 id=\"2-justify-content\"><strong>2. justify-content</strong></h3>\n<p>This property controls the alignment of flex items along the main axis (horizontal by default). Itâ€™s useful for\ndistributing space between items.</p>\n<p><strong>Common Values:</strong></p>\n<ul>\n<li><strong>flex-start:</strong> Items align to the start of the container (default).</li>\n<li><strong>flex-end:</strong> Items align to the end of the container.</li>\n<li><strong>center:</strong> Items are centered in the container.</li>\n<li><strong>space-between:</strong> Items are evenly distributed, with the first item at the start and the last item at the end.</li>\n<li><strong>space-around:</strong> Items are evenly distributed with space around them.</li>\n</ul>\n<p>Example:</p>\n<pre><code class=\"language-css\">    .container {\n    display: flex;\n    justify-content: space-between;\n}\n</code></pre>\n<h3 id=\"3-align-items\"><strong>3. align-items</strong></h3>\n<p>This property controls the alignment of flex items along the cross axis (vertical by default).</p>\n<p><strong>Common Values:</strong></p>\n<ul>\n<li><strong>stretch</strong>: Items stretch to fill the container (default).</li>\n<li><strong>flex-start</strong>: Items align to the start of the cross axis.</li>\n<li><strong>flex-end</strong>: Items align to the end of the cross axis.</li>\n<li><strong>center</strong>: Items are centered along the cross axis.</li>\n</ul>\n<p>Example:</p>\n<pre><code class=\"language-css\">.container {\n    display: flex;\n    align-items: center;\n}\n</code></pre>\n<h3 id=\"4-flex-direction\"><strong>4. flex-direction</strong></h3>\n<p>This property defines the direction of the main axis along which the items are placed.</p>\n<p><strong>Common Values:</strong></p>\n<ul>\n<li><strong>row</strong>: Items are placed horizontally (default).</li>\n<li><strong>row-reverse</strong>: Items are placed horizontally in reverse order.</li>\n<li><strong>column</strong>: Items are placed vertically.</li>\n<li><strong>column-reverse</strong>: Items are placed vertically in reverse order.</li>\n</ul>\n<p>Example:</p>\n<pre><code class=\"language-css\">.container {\n    display: flex;\n    flex-direction: column;\n}\n</code></pre>\n<h3 id=\"5-flex-wrap\"><strong>5. flex-wrap</strong></h3>\n<p>This property controls whether the flex items should wrap onto multiple lines.</p>\n<p><strong>Common Values:</strong></p>\n<ul>\n<li><strong>nowrap</strong>: All items will be on one line (default).</li>\n<li><strong>wrap</strong>: Items are placed horizontally in reverse order.</li>\n<li><strong>wrap-reverse</strong>: Items will wrap onto multiple lines in reverse order.</li>\n</ul>\n<p>Example:</p>\n<pre><code class=\"language-css\">.container {\n    display: flex;\n    flex-wrap: wrap;\n}\n</code></pre>\n<blockquote>\n<p>ðŸ’¡ use <a href=\"https://angrytools.com/css-flex/\">this tool</a> to fully understand the flexbox, and generate its code. </p>\n</blockquote>\n","markdown":"# Layout (flexbox)\n\n## What is Flexbox?\n\nFlexbox makes it easy to create flexible and responsive layouts. It works on a parent-child basis, aligning child\nelements within a parent container.\n\n## The Flexbox Model\n\nFlexbox works with two main components:\n\n1. **Flex Container:** The parent element that holds the flex items. Itâ€™s the element on which you apply display: flex;.\n2. **Flex Items:** The child elements within the flex container. These items are automatically aligned according to the\n   rules defined by Flexbox.\n\nExample:\n**HTML:**\n\n```html\n\n<div class=\"container\">\n  <div class=\"item\">Item 1</div>\n  <div class=\"item\">Item 2</div>\n  <div class=\"item\">Item 3</div>\n</div>\n```\n\n**CSS:**\n\n```css\n.container {\n    display: flex; /* Turns the container into a flex container */\n    background-color: #f4f4f4;\n    align-items: center; /* Centers the elements vertically  */\n    justify-content: center; /* Centers the elements horizontally  */\n    height: 100vh;\n}\n\n.item {\n    background-color: #333;\n    color: white;\n    padding: 20px;\n    margin: 10px;\n}\n```\n\n## Key Flexbox Properties\n\nLetâ€™s break down some of the most important Flexbox properties you'll use to create layouts.\n\n### **1. display: flex**\n\nThis property is applied to the container to enable Flexbox. It turns the container into a flex container and its\nchildren into flex items.\n\nExample:\n\n```css\n.container {\n    display: flex;\n}\n```\n\n### **2. justify-content**\n\nThis property controls the alignment of flex items along the main axis (horizontal by default). Itâ€™s useful for\ndistributing space between items.\n\n**Common Values:**\n\n* **flex-start:** Items align to the start of the container (default).\n* **flex-end:** Items align to the end of the container.\n* **center:** Items are centered in the container.\n* **space-between:** Items are evenly distributed, with the first item at the start and the last item at the end.\n* **space-around:** Items are evenly distributed with space around them.\n\nExample:\n\n```css\n    .container {\n    display: flex;\n    justify-content: space-between;\n}\n```\n\n### **3. align-items**\n\nThis property controls the alignment of flex items along the cross axis (vertical by default).\n\n**Common Values:**\n\n* **stretch**: Items stretch to fill the container (default).\n* **flex-start**: Items align to the start of the cross axis.\n* **flex-end**: Items align to the end of the cross axis.\n* **center**: Items are centered along the cross axis.\n\nExample:\n\n```css\n.container {\n    display: flex;\n    align-items: center;\n}\n```\n\n### **4. flex-direction**\n\nThis property defines the direction of the main axis along which the items are placed.\n\n**Common Values:**\n\n* **row**: Items are placed horizontally (default).\n* **row-reverse**: Items are placed horizontally in reverse order.\n* **column**: Items are placed vertically.\n* **column-reverse**: Items are placed vertically in reverse order.\n\nExample:\n\n```css\n.container {\n    display: flex;\n    flex-direction: column;\n}\n```\n\n### **5. flex-wrap**\n\nThis property controls whether the flex items should wrap onto multiple lines.\n\n**Common Values:**\n\n* **nowrap**: All items will be on one line (default).\n* **wrap**: Items are placed horizontally in reverse order.\n* **wrap-reverse**: Items will wrap onto multiple lines in reverse order.\n\nExample:\n\n```css\n.container {\n    display: flex;\n    flex-wrap: wrap;\n}\n```\n\n> ðŸ’¡ use [this tool](https://angrytools.com/css-flex/) to fully understand the flexbox, and generate its code. ","slug":"layout-(flexbox)","title":"Layout (Flexbox)","section":"CSS","icon":"tenge","filePath":"/home/runner/work/front-end-for-back-end-engineers/front-end-for-back-end-engineers/lessons/03-CSS/F-layout-(flexbox).md","nextSlug":"/front-end-for-back-end-engineers/lessons/CSS/responsive-design","prevSlug":"/front-end-for-back-end-engineers/lessons/CSS/styling-text"}},"__N_SSG":true}